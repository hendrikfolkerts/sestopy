SES JSON Version 1 - DO NOT EDIT THIS FILE MANUALLY!
Generated by SESToPy (University of Applied Sciences Wismar, Research Group Computational Engineering and Automation); Contact: Prof. Dr.-Ing. Thorsten Pawletta, thorsten.pawletta@hs-wismar.de; developed by Hendrik Martin Folkerts originally using Python 3.4.1 and PyQt 5.5
System Entity Structure tree with settings generated by SESToPy (University of Applied Sciences Wismar, Research Group Computational Engineering and Automation)
Created: 2021-03-27 18:46:44
[["1", "Entity Node", "pools", "0", "#000000", "False", [], [], [], "1", [], "1", "0"], ["2", "Maspect Node", "poolsMASP", "1", "#000000", "False", [], [["poolsMASP", "2", "", "", ""]], [], "NumPools", [], "1", "1"], ["3", "Entity Node", "pool", "2", "#000000", "False", [["_pool", "0", "", "internal variable"]], [], [], "1", [], "1", "2"], ["4", "Spec Node", "poolSPEC", "3", "#000000", "False", [], [], [], "1", [["notebooks", "5", "fun1(PATH,Types)=='nb'", "F", ""], ["desktops", "6", "fun1(PATH,Types)=='dt'", "T", ""]], "1", "3"], ["5", "Entity Node", "notebooks", "4", "#000000", "False", [], [], [], "1", [], "1", "4"], ["7", "Maspect Node", "notebooksMASP", "5", "#000000", "False", [], [["notebooksMASP", "7", "", "", ""]], [], "fun2(PATH, NumRepInPool)", [], "1", "5"], ["8", "Entity Node", "notebook", "7", "#000000", "False", [["_notebook", "0", "", "internal variable"]], [], [], "1", [], "1", "6"], ["11", "Maspect Node", "coresMASP", "8", "#000000", "False", [], [["coresMASP", "11", "", "", ""]], [], "fun3(PATH,NumCores)", [], "1", "7"], ["12", "Entity Node", "core", "11", "#000000", "False", [["_core", "0", "", "internal variable"]], [], [], "1", [], "1", "8"], ["6", "Entity Node", "desktops", "4", "#000000", "False", [], [], [], "1", [], "1", "4"], ["9", "Maspect Node", "desktopsMASP", "6", "#000000", "False", [], [["desktopsMASP", "9", "", "", ""]], [], "fun2(PATH, NumRepInPool)", [], "1", "5"], ["10", "Entity Node", "desktop", "9", "#000000", "False", [["_desktop", "0", "", "internal variable"]], [], [], "1", [], "1", "6"], ["13", "Maspect Node", "coresMASP", "10", "#000000", "False", [], [["coresMASP", "11", "", "", ""]], [], "fun3(PATH,NumCores)", [], "1", "7"], ["14", "Entity Node", "core", "13", "#000000", "False", [["_core", "0", "", "internal variable"]], [], [], "1", [], "1", "8"]]
[["ses", ""]]
[["NumPools", "2", ""], ["Types", "['nb', 'dt']", ""], ["NumRepInPool", "[2, 3]", ""], ["NumCores", "[[1, 2], [1, 2, 1]]", ""]]
[["NumPools==int(NumPools) and NumPools>0", "T"], ["all([element in ['nb','dt'] for element in Types])", "T"], ["len(Types)==NumPools", "T"], ["all([(element==int(element) and element>0) for element in NumRepInPool])", "T"], ["len(NumRepInPool)==NumPools", "T"], ["len(NumCores)==NumPools", "T"], ["all([all([(iE==int(iE) and iE>0) for iE in element]) for element in NumCores])", "T"], ["all([len(NumCores[el])==NumRepInPool[el] for el in range(len(NumCores))])", "T"]]
[]
[["fun1", "def fun1(pathToRoot, poolTypes):\n\tcurPoolNum = pathToRoot[\"_pool\"]\n\t#the return value of pathToRoot[\"_pool\"] is a string\n\tpooltype = poolTypes[int(curPoolNum)-1]\n\t#print(pooltype)\n\treturn pooltype\n\n#test the function -> uncomment the print(... command in line 5 as well\n#fun1({\"_pool\": \"1\"},[\"nb\",\"dt\"])\n"], ["fun2", "def fun2(pathToRoot, numComInEachPool):\n\tcurPoolNum = pathToRoot[\"_pool\"]\n\t#the return value of pathToRoot[\"_pool\"] is a string\n\tnumCom = numComInEachPool[int(curPoolNum)-1]\n\t#print(numCom)\n\treturn numCom\n\n#test the function -> uncomment the print(... command in line 5 as well\n#fun2({\"_pool\": \"1\"},[2,3])\n"], ["fun3", "def fun3(pathToRoot, numOfCores):\n\tcurPoolNum = pathToRoot[\"_pool\"]\n\t#the return value of pathToRoot[\"_pool\"] is a string\n\t#either there are notebooks or desktops in the pool\n\ttry:\n\t\tcurComNum = pathToRoot[\"_notebook\"]\n\texcept:\t#if there is an exception, the key does not exist -> desktop computers\n\t\tcurComNum = pathToRoot[\"_desktop\"]\n\t#now the current computer number is assigned\n\tnumCores = numOfCores[int(curPoolNum)-1][int(curComNum)-1]\n\t#print(numCores)\n\treturn numCores\n\n#test the function -> uncomment the print(... command in line 11 as well\n#fun3({\"_pool\": \"1\", \"_desktop\": \"2\"},[[1,2],[1,2,1]])\n"]]