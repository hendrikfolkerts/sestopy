SES JSON Version 1 - DO NOT EDIT THIS FILE MANUALLY!
Generated by SESToPy (University of Applied Sciences Wismar, Research Group Computational Engineering and Automation); Contact: Prof. Dr.-Ing. Thorsten Pawletta, thorsten.pawletta@hs-wismar.de; developed by Hendrik Martin Folkerts originally using Python 3.4.1 and PyQt 5.5
System Entity Structure tree with settings generated by SESToPy (University of Applied Sciences Wismar, Research Group Computational Engineering and Automation)
Created: 2021-03-27 18:49:21
[["1", "Entity Node", "pools", "0", "#000000", "False", [], [], [], "1", [], "1", "0"], ["2", "Maspect Node", "poolsMASP", "1", "#000000", "False", [], [["poolsMASP", "2", "", "", ""]], [], "NumPools", [], "1", "1"], ["3", "Entity Node", "pool", "2", "#000000", "False", [["_pool", "0", "", "internal variable"]], [], [], "1", [], "1", "2"], ["4", "Spec Node", "poolSPEC", "3", "#000000", "False", [], [], [], "1", [["notebooks", "5", "fun1(PATH,Types)=='nb'", "F", ""], ["desktops", "6", "fun1(PATH,Types)=='dt'", "T", ""]], "1", "3"], ["5", "Entity Node", "notebooks", "4", "#000000", "False", [], [], [], "1", [], "1", "4"], ["7", "Maspect Node", "notebooksMASP", "5", "#000000", "False", [], [["notebooksMASP", "7", "", "", ""]], [["", "", "", "", "", "", "cplfun(PATH,Types,NumRepInPool,PARENT,CHILDREN)", ""]], "fun2(PATH, NumRepInPool)", [], "1", "5"], ["8", "Entity Node", "notebook", "7", "#000000", "False", [["_notebook", "0", "", "internal variable"], ["mb", "\"MB/nb\"", "", ""]], [], [], "1", [], "1", "6"], ["6", "Entity Node", "desktops", "4", "#000000", "False", [], [], [], "1", [], "1", "4"], ["9", "Maspect Node", "desktopsMASP", "6", "#000000", "False", [], [["desktopsMASP", "9", "", "", ""]], [["", "", "", "", "", "", "cplfun(PATH,Types,NumRepInPool,PARENT,CHILDREN)", ""]], "fun2(PATH, NumRepInPool)", [], "1", "5"], ["10", "Entity Node", "desktop", "9", "#000000", "False", [["_desktop", "0", "", "internal variable"], ["mb", "\"MB/dt\"", "", ""]], [], [], "1", [], "1", "6"]]
[["ses", ""]]
[["NumPools", "2", ""], ["Types", "['nb', 'dt']", ""], ["NumRepInPool", "[2, 3]", ""]]
[["NumPools==int(NumPools) and NumPools>0", "T"], ["all([element in ['nb','dt'] for element in Types])", "T"], ["len(Types)==NumPools", "T"], ["all([(element==int(element) and element>0) for element in NumRepInPool])", "T"], ["len(NumRepInPool)==NumPools", "T"]]
[]
[["fun1", "def fun1(pathToRoot, poolTypes):\n\tcurPoolNum = pathToRoot[\"_pool\"]\n\t#the return value of pathToRoot[\"_pool\"] is a string\n\tpooltype = poolTypes[int(curPoolNum)-1]\n\t#print(pooltype)\n\treturn pooltype\n\n#test the function -> uncomment the print(... command in line 5 as well\n#fun1({\"_pool\": \"1\"},[\"nb\",\"dt\"])\n"], ["fun2", "def fun2(pathToRoot, numComInEachPool):\n\tcurPoolNum = pathToRoot[\"_pool\"]\n\t#the return value of pathToRoot[\"_pool\"] is a string\n\tnumCom = numComInEachPool[int(curPoolNum)-1]\n\t#print(numCom)\n\treturn numCom\n\n#test the function -> uncomment the print(... command in line 5 as well\n#fun2({\"_pool\": \"1\"},[2,3])\n"], ["cplfun", "def cplfun(pathToRoot, poolTypes, numComInEachPool, parent, children):\n    #parent is notebooks or desktops\n    #children[i] is notebook_i or desktop_i\n    curPoolNum = pathToRoot[\"_pool\"]\n    curType = poolTypes[int(curPoolNum)-1]\n    curNumCom = numComInEachPool[int(curPoolNum)-1]\n\n    cplg = []\n    for i in range(curNumCom):\n        if curType == \"nb\":\n            cplg.append([parent,\"in1 / SPR\",children[i],\"in1 / SPR\",\"\"])\n            cplg.append([parent,\"in2 / SPR\",children[i],\"in2 / SPR\",\"\"])\n            cplg.append([children[i],\"out1 / SPR\",parent,\"out\"+str(i+1)+\" / SPR\",\"\"])\n        elif curType == \"dt\":\n            cplg.append([parent,\"in1 / SPR\",children[i],\"in1 / SPR\",\"\"])\n            cplg.append([children[i],\"out1 / SPR\",parent,\"out\"+str(i+1)+\" / SPR\",\"\"])\n\n    #print(cplg)\n    return cplg\n\n#test the function -> uncomment the print(... command in line 18 as well\n#cplfun({\"_pool\": \"1\"},[\"nb\",\"dt\"],[2,3],\"notebooks\",[\"notebook_1\",\"notebook_2\"])\n#cplfun({\"_pool\": \"2\"},[\"nb\",\"dt\"],[2,3],\"desktops\",[\"desktop_1\",\"desktop_2\",\"desktop_3\"])\n"]]